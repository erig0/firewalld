m4_define([FWD_STOP_FIREWALLD], [
    pid=$(< firewalld.pid)
    kill $pid
    for I in 1 2 3 4 5 6 7 8 9 0; do
        ps --pid $pid >/dev/null || { pid=0; break; }
        sleep 1
    done
    test $pid -eq 0 || { kill -9 $pid; sleep 3; }
    ])

m4_define([FWD_CHECK_FIREWALLD], [
    AT_SKIP_IF([pgrep firewalld])

    dnl Can't start the dbus interface unless these exist, but we don't want to
    dnl install it and dirty the host.
    dnl
    dnl This can be manually installed with:
    dnl    ./configure --sysconfdir=/etc
    dnl    make -C config install-dist_dbus_policyDATA install-polkit1_actionDATA
    dnl    ln -s /usr/share/polkit-1/actions/org.fedoraproject.FirewallD1.server.policy \
    dnl          /usr/share/polkit-1/actions/org.fedoraproject.FirewallD1.policy
    dnl
    dnl You might have to restart dbus-daemon and polkitd.
    dnl Alternatively, fully install firewalld first.
    dnl
    AT_SKIP_IF([! test -f /etc/dbus-1/system.d/FirewallD.conf])
    AT_SKIP_IF([! test -f /usr/share/polkit-1/actions/org.fedoraproject.FirewallD1.policy])
    ])

m4_define([FWD_START_FIREWALLD], [
    FWD_CHECK_FIREWALLD

    FIREWALLD_ARGS="--debug --nofork --nopid --log-file ./firewalld.log --system-config ./"
    if test "x${FIREWALLD_DEFAULT_CONFIG}" != x ; then
        FIREWALLD_ARGS+=" --default-config ${FIREWALLD_DEFAULT_CONFIG}"
    fi

    firewalld $FIREWALLD_ARGS &
    if test $? -ne 0; then
        AT_FAIL_IF([:])
    fi
    echo "$!" > firewalld.pid

    dnl Give it some time for the dbus interface to come up
    up=0
    for I in 1 2 3 4 5 6 7 8 9 0; do
        if firewall-cmd --state; then
            up=1
            break
        fi
        sleep 1
    done
    AT_FAIL_IF([test $up -ne 1])
    ])

m4_define([FWD_RELOAD], [
    FWD_CHECK([-q --reload], [$1], [$2], [$3])
    ])

m4_define([FWD_RESTART], [
    FWD_STOP_FIREWALLD
    FWD_START_FIREWALLD
    ])

m4_define([FWD_START_TEST], [
    AT_SETUP([$1])

    dnl start every test with the default config
    if test "x${FIREWALLD_DEFAULT_CONFIG}" != x ; then
        AT_CHECK([if ! cp "${FIREWALLD_DEFAULT_CONFIG}/firewalld.conf" ./firewalld.conf; then exit 77; fi])
    else
        AT_CHECK([if ! cp /etc/firewalld/firewalld.conf ./firewalld.conf; then exit 77; fi])
    fi

    dnl dummy wrapper for trap syntax
    function kill_firewalld() {
        FWD_STOP_FIREWALLD
    }

    dnl run cleanup commands on test exit
    echo "" > cleanup
    trap ". ./cleanup" EXIT
    trap "kill_firewalld" EXIT

    FWD_START_FIREWALLD
    ])

m4_define([FWD_END_TEST], [
    if test x"$1" != x"ignore"; then
        if test -n "$1"; then
            sed -i $1 ./firewalld.log
        fi
        AT_FAIL_IF([grep ERROR ./firewalld.log])
        AT_FAIL_IF([grep WARNING ./firewalld.log])
    fi
    AT_CLEANUP
    ])

m4_define([FWD_CHECK], [
    AT_CHECK([firewall-cmd $1], [$2], [$3], [$4], [$5], [$6])
    ])

m4_define([FWD_GREP_LOG], [
    AT_CHECK([grep "$1" ./firewalld.log], 0, [ignore], [ignore])
    ])

m4_define([TRIM], [[sed -e 's/^[ \t]*//' -e 's/[ \t]*$//']])

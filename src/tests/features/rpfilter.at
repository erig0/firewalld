FWD_START_TEST([rpfilter - strict])
AT_KEYWORDS(rpfilter)
CHECK_NFTABLES_FIB()

AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=strict/' ./firewalld.conf])
FWD_RELOAD()

NFT_LIST_RULES([inet], [filter_PREROUTING], 0, [dnl
    table inet firewalld {
        chain filter_PREROUTING {
            icmpv6 type { nd-router-advert, nd-neighbor-solicit } accept
            meta nfproto ipv6 fib saddr . mark . iif oif missing drop
        }
    }
])

IP6TABLES_LIST_RULES([mangle], [PREROUTING], 0, [dnl
    ACCEPT 58 -- ::/0 ::/0 ipv6-icmptype 134
    ACCEPT 58 -- ::/0 ::/0 ipv6-icmptype 135
    DROP 0 -- ::/0 ::/0 rpfilter validmark invert
    PREROUTING_direct 0 -- ::/0 ::/0
    PREROUTING_POLICIES 0 -- ::/0 ::/0
])

FWD_END_TEST()

FWD_START_TEST([rpfilter - config values])
AT_KEYWORDS(rpfilter)
CHECK_NFTABLES_FIB()

dnl Verify other/deprecated configuration values are accepted.
dnl
m4_foreach([VALUE], [[no], [yes], [false], [true]], [
    AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=VALUE/' ./firewalld.conf])
    FWD_RELOAD()
])
dnl And a bogus one.
AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=bogus/' ./firewalld.conf])
FWD_RELOAD()

FWD_END_TEST([-e "/^WARNING: IPv6_rpfilter 'bogus' is not valid/d"])

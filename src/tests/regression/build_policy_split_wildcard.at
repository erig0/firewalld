FWD_START_TEST([build policy split wildcards])
AT_KEYWORDS(gh892 policy)

dnl Setting up policy and adding interfaces that will remain for the duration of 
dnl the tests
dnl
FWD_CHECK([--permanent --new-policy=foobar], 0, [ignore])
FWD_CHECK([--permanent --policy foobar --add-ingress-zone internal], 0, [ignore])
FWD_CHECK([--permanent --policy foobar --add-egress-zone public], 0, [ignore])
FWD_CHECK([--permanent --zone internal --add-interface foobar0], 0, [ignore])
FWD_CHECK([--permanent --zone internal --add-interface foobar1], 0, [ignore])
FWD_CHECK([--permanent --zone public --add-interface foobar2], 0, [ignore])
FWD_CHECK([--permanent --zone public --add-interface foobar3], 0, [ignore])
FWD_RELOAD

dnl Checking when the internal zone (iifname) is the only one with a wildcard
dnl
FWD_CHECK([--zone internal --add-interface tun+], 0, [ignore])
NFT_LIST_RULES([inet], [filter_FORWARD_POLICIES_pre], 0, [dnl
    table inet firewalld {
        chain filter_FORWARD_POLICIES_pre {
            iifname "tun*" oifname { "foobar2", "foobar3" } jump filter_FWD_policy_foobar
            iifname { "foobar0", "foobar1" } oifname { "foobar2", "foobar3" } jump filter_FWD_policy_foobar
        }
    }
])
FWD_CHECK([--zone internal --remove-interface tun+], 0, [ignore])


dnl Checking when the public zone (oifname) is the only one with a wildcard
dnl
FWD_CHECK([--zone public --add-interface tun+], 0, [ignore])
NFT_LIST_RULES([inet], [filter_FORWARD_POLICIES_pre], 0, [dnl
    table inet firewalld {
        chain filter_FORWARD_POLICIES_pre {
            iifname { "foobar0", "foobar1" } oifname "tun*" jump filter_FWD_policy_foobar
            iifname { "foobar0", "foobar1" } oifname { "foobar2", "foobar3" } jump filter_FWD_policy_foobar
        }
    }
])

dnl Checking when they are both wildcards
dnl
FWD_CHECK([--zone internal --add-interface net+], 0, [ignore])
NFT_LIST_RULES([inet], [filter_FORWARD_POLICIES_pre], 0, [dnl
    table inet firewalld {
        chain filter_FORWARD_POLICIES_pre {
            iifname "net*" oifname "tun*" jump filter_FWD_policy_foobar
            iifname "net*" oifname { "foobar2", "foobar3" } jump filter_FWD_policy_foobar
            iifname { "foobar0", "foobar1" } oifname "tun*" jump filter_FWD_policy_foobar
            iifname { "foobar0", "foobar1" } oifname { "foobar2", "foobar3" } jump filter_FWD_policy_foobar
        }
    }
])

FWD_END_TEST
